var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.findInternal=function(b,f,e){b instanceof String&&(b=String(b));for(var g=b.length,h=0;h<g;h++){var k=b[h];if(f.call(e,k,h,b))return{i:h,v:k}}return{i:-1,v:void 0}};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;
$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(b,f,e){b!=Array.prototype&&b!=Object.prototype&&(b[f]=e.value)};$jscomp.getGlobal=function(b){b=["object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof global&&global,b];for(var f=0;f<b.length;++f){var e=b[f];if(e&&e.Math==Math)return e}return globalThis};$jscomp.global=$jscomp.getGlobal(this);
$jscomp.polyfill=function(b,f,e,g){if(f){e=$jscomp.global;b=b.split(".");for(g=0;g<b.length-1;g++){var h=b[g];h in e||(e[h]={});e=e[h]}b=b[b.length-1];g=e[b];f=f(g);f!=g&&null!=f&&$jscomp.defineProperty(e,b,{configurable:!0,writable:!0,value:f})}};$jscomp.polyfill("Array.prototype.find",function(b){return b?b:function(b,e){return $jscomp.findInternal(this,b,e).v}},"es6","es3");
describe("Timepicker feature",function(){var b,f,e,g,h,k,n,p,q,r,a,c,d,l,m;beforeEach(function(){loadFixtures("timepicker.html");b=$("#timepicker1");k=b.timepicker();a=k.data("timepicker");f=$("#timepicker2");n=f.timepicker({template:"modal",showSeconds:!0,minuteStep:30,secondStep:30,defaultTime:!1});c=n.data("timepicker");e=$("#timepicker3");p=e.timepicker({showMeridian:!1,showSeconds:!0,defaultTime:"13:25:15",maxHours:100});d=p.data("timepicker");g=$("#timepicker-z-index");q=g.timepicker();l=q.data("timepicker");
h=$("#timepicker-snapper");r=h.timepicker({snapToStep:!0,minuteStep:30,defaultTime:"12:00 AM"});m=r.data("timepicker")});afterEach(function(){void 0!==b.data("timepicker")&&b.data("timepicker").remove();void 0!==f.data("timepicker")&&f.data("timepicker").remove();void 0!==e.data("timepicker")&&e.data("timepicker").remove();void 0!==g.data("timepicker")&&g.data("timepicker").remove();void 0!==h.data("timepicker")&&h.data("timepicker").remove();b.remove();f.remove();e.remove();g.remove();h.remove()});
it("should be available on the jquery object",function(){expect($.fn.timepicker).toBeDefined()});it("should be chainable",function(){expect(k).toBe(b)});it("should have sensible defaults",function(){expect(a.defaultTime).toBeTruthy();expect(a.minuteStep).toBe(15);expect(a.secondStep).toBe(15);expect(a.snapToStep).toBe(!1);expect(a.disableFocus).toBe(!1);expect(a.showSeconds).toBe(!1);expect(a.showInputs).toBe(!0);expect(a.showMeridian).toBe(!0);expect(a.template).toBe("dropdown");expect(a.appendWidgetTo).toBe("body");
expect(a.modalBackdrop).toBe(!1);expect(a.modalBackdrop).toBe(!1);expect(a.isOpen).toBe(!1);expect(a.showWidgetOnAddonClick).toBe(!0);expect(a.maxHours).toBe(24)});it("should allow user to configure defaults",function(){expect(c.template).toBe("modal");expect(c.minuteStep).toBe(30)});it("should be configurable with data attributes",function(){$("body").append('<div id="hi" class="bootstrap-timepicker"><input id="customTimepicker" data-template="modal" data-minute-step="30" data-modal-backdrop="true" data-show-meridian="true" type="text"/></div');
var a=$("body").find("#customTimepicker").timepicker().data("timepicker");expect($("body").find("#customTimepicker").length).toBe(1);expect(a.template).toBe("modal");expect(a.minuteStep).toBe(30,"data-minute-step not working");expect(a.modalBackdrop).toBe(!0,"data-modal-backdrop not working");expect(a.showMeridian).toBe(!0,"data-show-meridian not working");a.remove()});it("should be initialized on click with data-provide attribute",function(){$("body").append('<div id="foo" class="bootstrap-timepicker"><input id="fooTimepicker" data-provide="timepicker" type="text" /></div>');
$("#fooTimepicker").trigger("click");expect($("#fooTimepicker").data("timepicker")).toBeDefined()});it("should be initialized on focus with data-provide attribute",function(){$("body").append('<div id="bar" class="bootstrap-timepicker"><input id="barTimepicker" data-provide="timepicker" type="text" /></div>');$("#barTimepicker").trigger("focus");expect($("#barTimepicker").data("timepicker")).toBeDefined()});it("should have current time by default",function(){var b=new Date,c=b.getHours();b=b.getMinutes();
0!==b&&(b=Math.ceil(b/a.minuteStep)*a.minuteStep);60===b&&(c+=1,b=0);var d=12>c?"AM":"PM";12<c&&(c-=12);0===c&&(c=12);expect(a.hour).toBe(c);expect(a.minute).toBe(b);expect(a.meridian).toBe(d)});it("should not override time with current time if value is already set",function(){$("body").append('<div id="timepickerCustom"><input id="timepickerCustomInput" type="text" value="12:15 AM" /></div>');var a=$("#timepickerCustomInput").timepicker(),b=a.data("timepicker");expect(a.val()).toBe("12:15 AM");b.remove();
$("#timepickerCustom").remove()});it("should have no value if defaultTime is set to false",function(){expect(f.val()).toBe("")});it("should be able to set default time with config option",function(){expect(d.getTime()).toBe("13:25:15")});it("should update the element and widget with the setTime method",function(){c.setTime("9:15:20 AM");expect(c.hour).toBe(9);expect(c.minute).toBe(15);expect(c.second).toBe(20);expect(c.meridian).toBe("AM");expect(f.val()).toBe("9:15:20 AM");expect(c.$widget.find(".bootstrap-timepicker-hour").val()).toBe("9");
expect(c.$widget.find(".bootstrap-timepicker-minute").val()).toBe("15");expect(c.$widget.find(".bootstrap-timepicker-second").val()).toBe("20");expect(c.$widget.find(".bootstrap-timepicker-meridian").val()).toBe("AM")});it("should be able get & set the pickers time",function(){a.setTime("11:15 PM");expect(a.getTime()).toBe("11:15 PM");d.setTime("23:15:20");expect(d.getTime()).toBe("23:15:20");d.setTime("60:00:00");expect(d.getTime()).toBe("60:00:00");a.setTime("11pm");expect(a.getTime()).toBe("11:00 PM");
d.setTime("11pm");expect(d.getTime()).toBe("23:00:00");a.setTime("11a");expect(a.getTime()).toBe("11:00 AM");d.setTime("11a");expect(d.getTime()).toBe("11:00:00");a.setTime("1");expect(a.getTime()).toBe("1:00 AM");d.setTime("1");expect(d.getTime()).toBe("1:00:00");a.setTime("13");expect(a.getTime()).toBe("1:00 PM");d.setTime("13");expect(d.getTime()).toBe("13:00:00");a.setTime("10:20p");expect(a.getTime()).toBe("10:20 PM");d.setTime("10:20p");expect(d.getTime()).toBe("22:20:00");a.setTime("10:20 p.m.");
expect(a.getTime()).toBe("10:20 PM");d.setTime("10:20 p.m.");expect(d.getTime()).toBe("22:20:00");a.setTime("10:20a");expect(a.getTime()).toBe("10:20 AM");d.setTime("10:20a");expect(d.getTime()).toBe("10:20:00");a.setTime("10:2010");expect(a.getTime()).toBe("10:20 AM","setTime with 10:2010 on tp1");d.setTime("10:2010");expect(d.getTime()).toBe("10:20:10","setTime with 10:2010 on tp3");a.setTime("102010");expect(a.getTime()).toBe("10:20 AM","setTime with 102010 on tp1");d.setTime("102010");expect(d.getTime()).toBe("10:20:10",
"setTime with 102010 on tp3");a.setTime("2320");expect(a.getTime()).toBe("11:20 PM","setTime with 2320 on tp1");d.setTime("2320");expect(d.getTime()).toBe("23:20:00","setTime with 2320 on tp3");d.setTime("0:00");expect(d.getTime()).toBe("0:00:00","setTime with 0:00 on tp3");d.setTime("12:00 AM");expect(d.getTime()).toBe("0:00:00","setTime with 0:00 on tp3")});it("should update picker on blur",function(){b.val("10:25 AM");expect(a.getTime()).not.toBe("10:25 AM");b.trigger("blur");expect(a.getTime()).toBe("10:25 AM")});
it("should update element with updateElement method",function(){a.hour=10;a.minute=30;a.meridian="PM";a.updateElement();expect(b.val()).toBe("10:30 PM")});it("should update widget with updateWidget method",function(){c.hour=10;c.minute=30;c.second=15;expect(c.$widget.find(".bootstrap-timepicker-hour").val()).not.toBe("10");expect(c.$widget.find(".bootstrap-timepicker-minute").val()).not.toBe("30");expect(c.$widget.find(".bootstrap-timepicker-second").val()).not.toBe("15");c.updateWidget();expect(c.$widget.find(".bootstrap-timepicker-hour").val()).toBe("10");
expect(c.$widget.find(".bootstrap-timepicker-minute").val()).toBe("30");expect(c.$widget.find(".bootstrap-timepicker-second").val()).toBe("15")});it("should update picker with updateFromElementVal method",function(){a.hour=12;a.minute=12;a.meridian="PM";a.update();b.val("10:30 AM");expect(a.$widget.find(".bootstrap-timepicker-hour").val()).not.toBe("10");expect(a.$widget.find(".bootstrap-timepicker-minute").val()).not.toBe("30");expect(a.$widget.find(".bootstrap-timepicker-meridian").val()).not.toBe("AM");
expect(a.hour).not.toBe(10);expect(a.minute).not.toBe(30);expect(a.meridian).not.toBe("AM");a.updateFromElementVal();expect(a.$widget.find(".bootstrap-timepicker-hour").val()).toBe("10");expect(a.$widget.find(".bootstrap-timepicker-minute").val()).toBe("30");expect(a.$widget.find(".bootstrap-timepicker-meridian").val()).toBe("AM");expect(a.hour).toBe(10);expect(a.minute).toBe(30);expect(a.meridian).toBe("AM")});it("should update picker with updateFromWidgetInputs method",function(){a.hour=12;a.minute=
12;a.meridian="PM";a.update();a.$widget.find(".bootstrap-timepicker-hour").val(10);a.$widget.find(".bootstrap-timepicker-minute").val(30);a.$widget.find(".bootstrap-timepicker-meridian").val("AM");expect(a.hour).not.toBe(10);expect(a.minute).not.toBe(30);expect(a.meridian).not.toBe("AM");expect(b.val()).not.toBe("10:30 AM");a.updateFromWidgetInputs();expect(a.hour).toBe(10);expect(a.minute).toBe(30);expect(a.meridian).toBe("AM");expect(b.val()).toBe("10:30 AM")});it("should increment hours with incrementHour method",
function(){a.hour=9;a.incrementHour();expect(a.hour).toBe(10)});it("should decrement hours with decrementHour method",function(){a.hour=9;a.decrementHour();expect(a.hour).toBe(8)});it("should toggle meridian if hour goes past 12",function(){b.val("11:00 AM");a.updateFromElementVal();a.incrementHour();expect(a.hour).toBe(12);expect(a.minute).toBe(0);expect(a.meridian).toBe("PM")});it("should toggle meridian if hour goes below 1",function(){b.val("11:00 AM");a.updateFromElementVal();a.incrementHour();
expect(a.hour).toBe(12);expect(a.minute).toBe(0);expect(a.meridian).toBe("PM")});it("should set hour to 1 if hour increments on 12 for 12h clock",function(){b.val("11:15 PM");a.updateFromElementVal();a.incrementHour();a.incrementHour();expect(a.getTime()).toBe("1:15 AM")});it('should set hour to 0 if hour increments on "maxHours-1" for 24h clock',function(){e.val("98:15:30");d.updateFromElementVal();d.incrementHour();d.incrementHour();expect(d.hour).toBe(0);expect(d.minute).toBe(15);expect(d.second).toBe(30)});
it("should increment minutes with incrementMinute method",function(){a.minute=10;a.incrementMinute();expect(a.minute).toBe(15);c.minute=0;c.incrementMinute();expect(c.minute).toBe(30)});it("should decrement minutes with decrementMinute method",function(){a.hour=11;a.minute=0;a.decrementMinute();expect(a.hour).toBe(10);expect(a.minute).toBe(45);c.hour=11;c.minute=0;c.decrementMinute();expect(c.hour).toBe(10);expect(c.minute).toBe(30)});it("should increment hour if minutes increment past 59",function(){b.val("11:55 AM");
a.updateFromElementVal();a.incrementMinute();a.update();expect(a.getTime()).toBe("12:00 PM")});it("should toggle meridian with toggleMeridian method",function(){a.meridian="PM";a.toggleMeridian();expect(a.meridian).toBe("AM")});it("should increment seconds with incrementSecond method",function(){a.second=0;a.incrementSecond();expect(a.second).toBe(15);c.second=0;c.incrementSecond();expect(c.second).toBe(30)});it("should decrement seconds with decrementSecond method",function(){c.hour=11;c.minute=
0;c.second=0;c.decrementSecond();expect(c.minute).toBe(59);expect(c.second).toBe(30)});it("should increment minute by 1 if seconds increment past 59",function(){f.val("11:55:30 AM");c.updateFromElementVal();c.incrementSecond();c.update();expect(c.getTime()).toBe("11:56:00 AM")});it("should not have any remaining events if remove is called",function(){var e=0;b.on("hide.timepicker",function(){e++});b.parents("div").find(".input-group-addon").trigger("click");$("body").trigger("mousedown");expect(e).toBe(1);
a.remove();c.remove();d.remove();l.remove();$("body").trigger("click");expect(e).toBe(1)});it("should be able to reset time by using setTime 0/null",function(){a.hour=10;a.minute=30;a.meridian="PM";a.updateElement();b.timepicker("setTime",null);expect(a.getTime()).toBe("")});it("should snap minutes to multiple of step when using setTime",function(){m.setTime("2:33 AM");expect(m.getTime()).toBe("2:30 AM")});it("should place timepicker on top of parents",function(){l.showWidget();$("body").find(".bootstrap-timepicker-widget").css("position",
"relative");expect($("body").find(".bootstrap-timepicker-widget").css("z-index")).toBe("1010")});it("should not have the widget in the DOM if remove method is called",function(){a.showWidget();c.showWidget();d.showWidget();l.showWidget();expect($("body")).toContain(".bootstrap-timepicker-widget");a.remove();c.remove();d.remove();l.remove();expect($("body")).not.toContain(".bootstrap-timepicker-widget")});it("should be able to set time from a script",function(){b.timepicker("setTime","12:35 PM");a.update();
expect(a.getTime()).toBe("12:35 PM")});it("should be able to opened from script",function(){expect(a.isOpen).toBe(!1);b.timepicker("showWidget");expect(a.isOpen).toBe(!0)})});
