var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.findInternal=function(c,e,d){c instanceof String&&(c=String(c));for(var f=c.length,g=0;g<f;g++){var k=c[g];if(e.call(d,k,g,c))return{i:g,v:k}}return{i:-1,v:void 0}};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;
$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(c,e,d){c!=Array.prototype&&c!=Object.prototype&&(c[e]=d.value)};$jscomp.getGlobal=function(c){c=["object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof global&&global,c];for(var e=0;e<c.length;++e){var d=c[e];if(d&&d.Math==Math)return d}return globalThis};$jscomp.global=$jscomp.getGlobal(this);
$jscomp.polyfill=function(c,e,d,f){if(e){d=$jscomp.global;c=c.split(".");for(f=0;f<c.length-1;f++){var g=c[f];g in d||(d[g]={});d=d[g]}c=c[c.length-1];f=d[c];e=e(f);e!=f&&null!=e&&$jscomp.defineProperty(d,c,{configurable:!0,writable:!0,value:e})}};$jscomp.polyfill("Array.prototype.find",function(c){return c?c:function(c,d){return $jscomp.findInternal(this,c,d).v}},"es6","es3");
describe("Mouse events feature",function(){var c,e,d,f,g,k,m,n,p,q,a,b,h,l;beforeEach(function(){loadFixtures("timepicker.html");c=$("#timepicker1");k=c.timepicker();a=k.data("timepicker");e=$("#timepicker2");m=e.timepicker({template:"modal",showSeconds:!0,minuteStep:30,secondStep:30,defaultTime:!1});b=m.data("timepicker");d=$("#timepicker3");n=d.timepicker({defaultTime:"23:15:20",showMeridian:!1,showSeconds:!0});n.data("timepicker");f=$("#timepicker4");p=f.timepicker({minuteStep:5,showInputs:!1,
showMeridian:!0,template:"modal",disableFocus:!0});h=p.data("timepicker");g=$("#timepicker5");q=g.timepicker({showWidgetOnAddonClick:!1});l=q.data("timepicker")});afterEach(function(){c.data("timepicker").remove();e.data("timepicker").remove();d.data("timepicker").remove();f.data("timepicker").remove();g.data("timepicker").remove();c.remove();e.remove();d.remove();f.remove();g.remove()});it("should be shown and trigger show events on input click",function(){var b=0;c.on("show.timepicker",function(){b++});
c.parents("div").find(".input-group-addon").trigger("click");expect(a.isOpen).toBe(!0);expect(b).toBe(1)});it("should be hidden and trigger hide events on click outside of widget",function(){var b=0,d;a.setTime("11:30 AM");a.update();c.on("hide.timepicker",function(a){b++;d=a.time.value});c.parents("div").find(".input-group-addon").trigger("click");expect(a.isOpen).toBe(!0);$("body").trigger("mousedown");expect(a.isOpen).toBe(!1,"widget is still open");expect(b).toBe(1,"hide event was not thrown once");
expect(d).toBe("11:30 AM")});it("should not show widget when clicking input-group-addon icon if showWidgetOnAddonClick is false",function(){expect(l.isOpen).toBe(!1);g.parents("div").find(".input-group-addon").trigger("click");expect(l.isOpen).toBe(!1)});it("should increment hour on button click",function(){a.setTime("11:30 AM");a.update();var d=0;c.on("changeTime.timepicker",function(){d++});a.$widget.find('a[data-action="incrementHour"]').trigger("click");expect(a.getTime()).toBe("12:30 PM");expect(d).toBe(1);
b.$widget.find('a[data-action="incrementHour"]').trigger("click");expect(b.getTime()).toBe("1:00:00 AM")});it("should decrement hour on button click and fire 1 changeTime event",function(){a.setTime("12:30 PM");a.update();var d=0;c.on("changeTime.timepicker",function(){d++});a.$widget.find('a[data-action="decrementHour"]').trigger("click");expect(a.getTime()).toBe("11:30 AM","meridian isnt toggling");expect(d).toBe(1);b.$widget.find('a[data-action="incrementHour"]').trigger("click");b.$widget.find('a[data-action="incrementHour"]').trigger("click");
b.$widget.find('a[data-action="decrementHour"]').trigger("click");expect(b.getTime()).toBe("1:00:00 AM")});it("should increment minute on button click and fire 1 changeTime event",function(){a.setTime("11:30 AM");a.update();h.setTime("11:30 AM");h.update();var d=0;c.on("changeTime.timepicker",function(){d++});a.$widget.find('a[data-action="incrementMinute"]').trigger("click");expect(a.getTime()).toBe("11:45 AM");b.$widget.find('a[data-action="incrementMinute"]').trigger("click");expect(b.getTime()).toBe("0:30:00 AM");
expect(d).toBe(1);f.trigger("click");h.$widget.find('a[data-action="incrementMinute"]').trigger("click");h.$widget.find('a[data-action="decrementHour"]').trigger("click");f.closest("modal").find(".btn-primary").trigger("click");expect(h.getTime()).toBe("10:35 AM");expect(f.val()).toBe("10:35 AM")});it("should decrement minute on button click",function(){a.setTime("12:30 PM");a.update();h.setTime("11:30 AM");h.update();a.$widget.find('a[data-action="decrementMinute"]').trigger("click");expect(a.getTime()).toBe("12:15 PM");
h.$widget.find('a[data-action="decrementMinute"]').trigger("click");expect(h.getTime()).toBe("11:25 AM")});it("should go from 11:00 AM to 1:00 AM on 2 hour increments and fire 2 change time events",function(){a.setTime("11:00 AM");a.update();var b=0;c.on("changeTime.timepicker",function(){b++});a.$widget.find('a[data-action="incrementHour"]').trigger("click");a.$widget.find('a[data-action="incrementHour"]').trigger("click");expect(a.getTime()).toBe("1:00 PM");expect(b).toBe(2)});it("should go from 11:45 AM to 12:00 PM on 4 minute increments and fire 1 change time events",
function(){a.setTime("11:45 AM");a.update();var b=0;c.on("changeTime.timepicker",function(){b++});a.$widget.find('a[data-action="incrementMinute"]').trigger("click");expect(a.getTime()).toBe("12:00 PM");expect(b).toBe(1)});it("should be 11:30:00 PM if minute is decremented on empty input",function(){b.$widget.find('a[data-action="decrementMinute"]').trigger("click");expect(b.getTime()).toBe("11:30:00 PM")});it("should increment second on button click",function(){b.setTime("11:30:15 AM");b.update();
b.$widget.find('a[data-action="incrementSecond"]').trigger("click");expect(b.getTime()).toBe("11:30:30 AM")});it("should decrement second on button click",function(){b.setTime("12:30:15 PM");b.update();b.$widget.find('a[data-action="decrementSecond"]').trigger("click");expect(b.getTime()).toBe("12:29:45 PM")});it("should be 11:30:00 PM if minute is decremented on empty input",function(){b.$widget.find('a[data-action="decrementMinute"]').trigger("click");expect(b.getTime()).toBe("11:30:00 PM")});it("should increment second on button click",
function(){b.setTime("11:30:15 AM");b.update();b.$widget.find('a[data-action="incrementSecond"]').trigger("click");expect(b.getTime()).toBe("11:30:30 AM")});it("should decrement second on button click",function(){b.setTime("12:30:15 PM");b.update();b.$widget.find('a[data-action="decrementSecond"]').trigger("click");expect(b.getTime()).toBe("12:29:45 PM")});it("should toggle meridian on button click",function(){a.setTime("12:30 PM");a.update();a.$widget.find('a[data-action="toggleMeridian"]').first().trigger("click");
expect(a.getTime()).toBe("12:30 AM");a.$widget.find('a[data-action="toggleMeridian"]').last().trigger("click");expect(a.getTime()).toBe("12:30 PM")});it("should trigger changeTime event if time is changed",function(){var b=0,d;c.timepicker().on("changeTime.timepicker",function(a){b++;d=a.time.value});a.setTime("11:30 AM");expect(b).toBe(1);expect(d).toBe("11:30 AM");a.$widget.find('a[data-action="incrementHour"]').trigger("click");expect(b).toBe(2);expect(a.getTime()).toBe("12:30 PM");expect(d).toBe("12:30 PM");
a.$widget.find('a[data-action="incrementMinute"]').trigger("click");expect(b).toBe(3);expect(a.getTime()).toBe("12:45 PM")});it("should close all open widgets on document mousedown or touchend",function(){a.showWidget();b.showWidget();expect(a.isOpen).toBe(!0);expect(b.isOpen).toBe(!0);$(document).trigger("mousedown");expect(a.isOpen).toBe(!1);expect(b.isOpen).toBe(!1);a.showWidget();b.showWidget();expect(a.isOpen).toBe(!0);expect(b.isOpen).toBe(!0);$(document).trigger("touchend");expect(a.isOpen).toBe(!1);
expect(b.isOpen).toBe(!1)});it("should highlight widget inputs on click",function(){a.setTime("11:55 AM");a.update();c.parents(".bootstrap-timepicker").find(".input-group-addon").trigger("click");expect(a.isOpen).toBe(!0);expect(a.$widget.find(".bootstrap-timepicker-hour").val()).toBe("11");a.$widget.find(".bootstrap-timepicker-hour").trigger("click");var b=window.getSelection().toString();expect(b).toBe("11","hour input not being highlighted");a.$widget.find(".bootstrap-timepicker-minute").trigger("click");
b=window.getSelection().toString();expect(b).toBe("55","minute input not being highlighted");a.$widget.find(".bootstrap-timepicker-meridian").trigger("click");b=window.getSelection().toString();expect(b).toBe("AM","meridian input not being highlighted")})});
